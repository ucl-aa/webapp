kind: pipeline
type: kubernetes
name: build

steps:
  - name: test
    image: mcr.microsoft.com/dotnet/sdk:6.0-alpine
    commands:
      - dotnet test WebAppTest

  - name: semantic-release
    image: cr.seen.wtf/semantic-release-container
    pull: always
    environment:
      GH_TOKEN:
        from_secret: GITHUB_TOKEN
    volumes:
      - name: dockersock
        path: /var/run/
    commands:
      - semantic-release
    when:
      status:
        - success

services:
  - name: docker
    image: docker:dind
    privileged: true
    volumes:
      - name: dockersock
        path: /var/run

volumes:
  - name: dockersock
    temp: {}

trigger:
  event:
    - push

---
kind: pipeline
type: kubernetes
name: deploy

steps:
  - name: deploy
    image: bitnami/kubectl
    environment:
      KUBE_CLUSTER_CERT:
        from_secret: KUBE_CLUSTER_CERT
      KUBE_CLIENT_CERT:
        from_secret: KUBE_CLIENT_CERT
      KUBE_CLIENT_KEY:
        from_secret: KUBE_CLIENT_KEY
    commands:
      - echo $(pwd)
      - sed -i "s/KUBE_CLUSTER_CERT/$KUBE_CLUSTER_CERT/g" ../.drone/kube_config.yml
      - sed -i "s/KUBE_CLIENT_CERT/$KUBE_CLIENT_CERT/g" ../.drone/kube_config.yml
      - sed -i "s/KUBE_CLIENT_KEY/$KUBE_CLIENT_KEY/g" ../.drone/kube_config.yml
      - KUBE_CONFIG=$(pwd)/.drone/kube_config.yml && export KUBE_CONFIG
      - kubectl rollout restart -n ucl-aa deploy aa-webapp

trigger:
  target:
    - production
  event:
    - promote
